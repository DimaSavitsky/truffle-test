{
  "contractName": "WagerFactory",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "wagers",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "factoryOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "testValue",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getWagersCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "incrementTestValue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "offerWager",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x6060604052341561000f57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260006101000a81548160ff021916908360ff160217905550611fcd8061007a6000396000f300606060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063375068e51461007d5780634273601c146100e057806356671372146101355780638af5de721461014a57806397d3c21a14610179578063b6ee6abb146101a2575b600080fd5b341561008857600080fd5b61009e60048080359060200190919050506101ac565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100eb57600080fd5b6100f36101eb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561014057600080fd5b610148610210565b005b341561015557600080fd5b61015d61023f565b604051808260ff1660ff16815260200191505060405180910390f35b341561018457600080fd5b61018c610252565b6040518082815260200191505060405180910390f35b6101aa61025f565b005b6001818154811015156101bb57fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001600260009054906101000a900460ff1601600260006101000a81548160ff021916908360ff160217905550565b600260009054906101000a900460ff1681565b6000600180549050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515156102bd57600080fd5b34336000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166102e96103d1565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001925050506040518091039082f080151561036757600080fd5b905090506001805480600101828161037f91906103e1565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b604051611b6f8061043383390190565b81548183558181151161040857818360005260206000209182019101610407919061040d565b5b505050565b61042f91905b8082111561042b576000816000905550600101610413565b5090565b9056006060604052604051604080611b6f8339810160405280805190602001909190805190602001909190505060003411151561003857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561007357600080fd5b736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346009819055506001600560006101000a81548160ff0219169083151502179055506000600560016101000a81548160ff02191690831515021790555081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506119d7806101986000396000f3006060604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631da13ae0146100d557806327dc297e146100df57806338bbfa50146101495780633f6fa655146101f6578063573255f4146102235780635c320516146102785780635c39fcc1146102905780635d495aea146102e5578063772d6354146102ef578063aa8c217c14610344578063bdd460331461036d578063dfbf53ae146103fc578063e0caf57814610451578063e20ccec31461048a575b600080fd5b6100dd6104b7565b005b34156100ea57600080fd5b61014760048080356000191690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610616565b005b341561015457600080fd5b6101f460048080356000191690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610790565b005b341561020157600080fd5b610209610795565b604051808215151515815260200191505060405180910390f35b341561022e57600080fd5b6102366107a8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61028e60048080359060200190919050506107ce565b005b341561029b57600080fd5b6102a36108fa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102ed610920565b005b34156102fa57600080fd5b610302610a52565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561034f57600080fd5b610357610a78565b6040518082815260200191505060405180910390f35b341561037857600080fd5b610380610a7e565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390f35b341561040757600080fd5b61040f610ad7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561045c57600080fd5b610488600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610afd565b005b341561049557600080fd5b61049d610c31565b604051808215151515815260200191505060405180910390f35b600560019054906101000a900460ff161515156104d357600080fd5b600560009054906101000a900460ff1615156104ee57600080fd5b600954341415156104fe57600080fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415151561055b57600080fd5b600560029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515156105b857600080fd5b33600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600560006101000a81548160ff021916908315150217905550565b61061e610c44565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561065757600080fd5b60016002825181151561066657fe5b041461069457600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166106b8565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050151561077157600080fd5b6001600560016101000a81548160ff0219169083151502179055505050565b505050565b600560019054906101000a900460ff1681565b600560029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561082a57600080fd5b600560019054906101000a900460ff1615151561084657600080fd5b600560009054906101000a900460ff16151561086157600080fd5b6009548110806108745750346009540181145b151561087f57600080fd5b6009548110156108f057600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600954039081150290604051600060405180830381858888f1935050505015156108ef57600080fd5b5b8060098190555050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560019054906101000a900460ff1615151561093c57600080fd5b600560009054906101000a900460ff1615151561095857600080fd5b600560029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109b457600080fd5b610a4f6040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250606060405190810160405280603081526020017f6a736f6e28687474703a2f2f6170692e69636e64622e636f6d2f6a6f6b65732f81526020017f72616e646f6d292e76616c75652e696400000000000000000000000000000000815250610f33565b50565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095481565b6000806000600954600560029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925092509250909192565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b5957600080fd5b600560019054906101000a900460ff16151515610b7557600080fd5b600560009054906101000a900460ff161515610b9057600080fd5b600560029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610bed57600080fd5b80600560026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600560009054906101000a900460ff1681565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610cb457506000610cb26000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611441565b145b15610cc557610cc3600061144c565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610d4957600080fd5b5af11515610d5657600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610e92576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610e3a57600080fd5b5af11515610e4757600080fd5b50505060405180519050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610f1757600080fd5b5af11515610f2457600080fd5b50505060405180519050905090565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610fa557506000610fa36000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611441565b145b15610fb657610fb4600061144c565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561103a57600080fd5b5af1151561104757600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611183576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561112b57600080fd5b5af1151561113857600080fd5b50505060405180519050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561122d578082015181840152602081019050611212565b50505050905090810190601f16801561125a5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b151561127857600080fd5b5af1151561128557600080fd5b50505060405180519050905062030d403a02670de0b6b3a7640000018111156112b4576000600102915061143a565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561136c578082015181840152602081019050611351565b50505050905090810190601f1680156113995780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156113d25780820151818401526020810190506113b7565b50505050905090810190601f1680156113ff5780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b151561141f57600080fd5b5af1151561142c57600080fd5b505050506040518051905091505b5092915050565b6000813b9050919050565b600061145661145d565b9050919050565b60008061147d731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611441565b111561151e57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115156040805190810160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506118ec565b600190506118e9565b600061153d73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611441565b11156115de5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115d56040805190810160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506118ec565b600190506118e9565b60006115fd73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611441565b111561169e5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116956040805190810160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506118ec565b600190506118e9565b60006116bd73146500cfd35b22e4a392fe0adc06de1a1368ed48611441565b111561175e5773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117556040805190810160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506118ec565b600190506118e9565b600061177d736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611441565b11156117e057736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506118e9565b60006117ff7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611441565b1115611862577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506118e9565b60006118817351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611441565b11156118e4577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506118e9565b600090505b90565b8060029080519060200190611902929190611906565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061194757805160ff1916838001178555611975565b82800160010185558215611975579182015b82811115611974578251825591602001919060010190611959565b5b5090506119829190611986565b5090565b6119a891905b808211156119a457600081600090555060010161198c565b5090565b905600a165627a7a72305820eb3bc91f01426e5f9602d1937311d1d42cf50936308158c360f3d7c30198735d0029a165627a7a7230582090bf94156674cdf6dd6fbf5686b46b874e651e510892e09f0366094977d9cedf0029",
  "deployedBytecode": "0x606060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063375068e51461007d5780634273601c146100e057806356671372146101355780638af5de721461014a57806397d3c21a14610179578063b6ee6abb146101a2575b600080fd5b341561008857600080fd5b61009e60048080359060200190919050506101ac565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100eb57600080fd5b6100f36101eb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561014057600080fd5b610148610210565b005b341561015557600080fd5b61015d61023f565b604051808260ff1660ff16815260200191505060405180910390f35b341561018457600080fd5b61018c610252565b6040518082815260200191505060405180910390f35b6101aa61025f565b005b6001818154811015156101bb57fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001600260009054906101000a900460ff1601600260006101000a81548160ff021916908360ff160217905550565b600260009054906101000a900460ff1681565b6000600180549050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515156102bd57600080fd5b34336000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166102e96103d1565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001925050506040518091039082f080151561036757600080fd5b905090506001805480600101828161037f91906103e1565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b604051611b6f8061043383390190565b81548183558181151161040857818360005260206000209182019101610407919061040d565b5b505050565b61042f91905b8082111561042b576000816000905550600101610413565b5090565b9056006060604052604051604080611b6f8339810160405280805190602001909190805190602001909190505060003411151561003857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561007357600080fd5b736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346009819055506001600560006101000a81548160ff0219169083151502179055506000600560016101000a81548160ff02191690831515021790555081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506119d7806101986000396000f3006060604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631da13ae0146100d557806327dc297e146100df57806338bbfa50146101495780633f6fa655146101f6578063573255f4146102235780635c320516146102785780635c39fcc1146102905780635d495aea146102e5578063772d6354146102ef578063aa8c217c14610344578063bdd460331461036d578063dfbf53ae146103fc578063e0caf57814610451578063e20ccec31461048a575b600080fd5b6100dd6104b7565b005b34156100ea57600080fd5b61014760048080356000191690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610616565b005b341561015457600080fd5b6101f460048080356000191690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610790565b005b341561020157600080fd5b610209610795565b604051808215151515815260200191505060405180910390f35b341561022e57600080fd5b6102366107a8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61028e60048080359060200190919050506107ce565b005b341561029b57600080fd5b6102a36108fa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102ed610920565b005b34156102fa57600080fd5b610302610a52565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561034f57600080fd5b610357610a78565b6040518082815260200191505060405180910390f35b341561037857600080fd5b610380610a7e565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390f35b341561040757600080fd5b61040f610ad7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561045c57600080fd5b610488600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610afd565b005b341561049557600080fd5b61049d610c31565b604051808215151515815260200191505060405180910390f35b600560019054906101000a900460ff161515156104d357600080fd5b600560009054906101000a900460ff1615156104ee57600080fd5b600954341415156104fe57600080fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415151561055b57600080fd5b600560029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515156105b857600080fd5b33600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600560006101000a81548160ff021916908315150217905550565b61061e610c44565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561065757600080fd5b60016002825181151561066657fe5b041461069457600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166106b8565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050151561077157600080fd5b6001600560016101000a81548160ff0219169083151502179055505050565b505050565b600560019054906101000a900460ff1681565b600560029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561082a57600080fd5b600560019054906101000a900460ff1615151561084657600080fd5b600560009054906101000a900460ff16151561086157600080fd5b6009548110806108745750346009540181145b151561087f57600080fd5b6009548110156108f057600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600954039081150290604051600060405180830381858888f1935050505015156108ef57600080fd5b5b8060098190555050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560019054906101000a900460ff1615151561093c57600080fd5b600560009054906101000a900460ff1615151561095857600080fd5b600560029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109b457600080fd5b610a4f6040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250606060405190810160405280603081526020017f6a736f6e28687474703a2f2f6170692e69636e64622e636f6d2f6a6f6b65732f81526020017f72616e646f6d292e76616c75652e696400000000000000000000000000000000815250610f33565b50565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095481565b6000806000600954600560029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925092509250909192565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b5957600080fd5b600560019054906101000a900460ff16151515610b7557600080fd5b600560009054906101000a900460ff161515610b9057600080fd5b600560029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610bed57600080fd5b80600560026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600560009054906101000a900460ff1681565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610cb457506000610cb26000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611441565b145b15610cc557610cc3600061144c565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610d4957600080fd5b5af11515610d5657600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610e92576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610e3a57600080fd5b5af11515610e4757600080fd5b50505060405180519050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610f1757600080fd5b5af11515610f2457600080fd5b50505060405180519050905090565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610fa557506000610fa36000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611441565b145b15610fb657610fb4600061144c565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561103a57600080fd5b5af1151561104757600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611183576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561112b57600080fd5b5af1151561113857600080fd5b50505060405180519050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561122d578082015181840152602081019050611212565b50505050905090810190601f16801561125a5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b151561127857600080fd5b5af1151561128557600080fd5b50505060405180519050905062030d403a02670de0b6b3a7640000018111156112b4576000600102915061143a565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561136c578082015181840152602081019050611351565b50505050905090810190601f1680156113995780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156113d25780820151818401526020810190506113b7565b50505050905090810190601f1680156113ff5780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b151561141f57600080fd5b5af1151561142c57600080fd5b505050506040518051905091505b5092915050565b6000813b9050919050565b600061145661145d565b9050919050565b60008061147d731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611441565b111561151e57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115156040805190810160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506118ec565b600190506118e9565b600061153d73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611441565b11156115de5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115d56040805190810160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506118ec565b600190506118e9565b60006115fd73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611441565b111561169e5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116956040805190810160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506118ec565b600190506118e9565b60006116bd73146500cfd35b22e4a392fe0adc06de1a1368ed48611441565b111561175e5773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117556040805190810160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506118ec565b600190506118e9565b600061177d736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611441565b11156117e057736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506118e9565b60006117ff7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611441565b1115611862577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506118e9565b60006118817351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611441565b11156118e4577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506118e9565b600090505b90565b8060029080519060200190611902929190611906565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061194757805160ff1916838001178555611975565b82800160010185558215611975579182015b82811115611974578251825591602001919060010190611959565b5b5090506119829190611986565b5090565b6119a891905b808211156119a457600081600090555060010161198c565b5090565b905600a165627a7a72305820eb3bc91f01426e5f9602d1937311d1d42cf50936308158c360f3d7c30198735d0029a165627a7a7230582090bf94156674cdf6dd6fbf5686b46b874e651e510892e09f0366094977d9cedf0029",
  "sourceMap": "49:613:1:-;;;168:96;;;;;;;;224:10;209:12;;:25;;;;;;;;;;;;;;;;;;256:1;244:9;;:13;;;;;;;;;;;;;;;;;;49:613;;;;;;",
  "deployedSourceMap": "49:613:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;110:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;77:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;365:79;;;;;;;;;;;;;;139:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;270:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;450:210;;;;;;110:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;77:27::-;;;;;;;;;;;;;:::o;365:79::-;436:1;424:9;;;;;;;;;;;:13;412:9;;:25;;;;;;;;;;;;;;;;;;365:79::o;139:22::-;;;;;;;;;;;;;:::o;270:89::-;316:4;339:6;:13;;;;332:20;;270:89;:::o;450:210::-;542:14;519:12;;;;;;;;;;;505:26;;:10;:26;;;;497:35;;;;;;;;577:9;588:10;600:12;;;;;;;;;;;559:54;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;542:71;;623:6;:30;;;;;;;;;;;:::i;:::-;;;;;;;;;;643:8;623:30;;;;;;;;;;;;;;;;;;;;;;;450:210;:::o;49:613::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.21;\n\nimport './Wager.sol';\n\ncontract WagerFactory {\n    address public factoryOwner;\n    address[] public wagers;\n    uint8 public testValue;\n\n    function WagerFactory() public {\n        factoryOwner = msg.sender;\n        testValue = 0;\n    }\n\n    function getWagersCount() public view returns(uint) {\n        return wagers.length;\n    }\n\n    function incrementTestValue() public {\n        testValue = testValue + 1;\n    }\n\n    function offerWager() public payable {\n        require(msg.sender != factoryOwner);\n        Wager newWager = (new Wager).value(msg.value)(msg.sender, factoryOwner);\n        wagers.push(address(newWager));\n    }\n}\n",
  "sourcePath": "/Users/dmitrisavitski/EthereumProjects/Practice/truffle-test/contracts/WagerFactory.sol",
  "ast": {
    "absolutePath": "/Users/dmitrisavitski/EthereumProjects/Practice/truffle-test/contracts/WagerFactory.sol",
    "exportedSymbols": {
      "WagerFactory": [
        363
      ]
    },
    "id": 364,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 289,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/Users/dmitrisavitski/EthereumProjects/Practice/truffle-test/contracts/Wager.sol",
        "file": "./Wager.sol",
        "id": 290,
        "nodeType": "ImportDirective",
        "scope": 364,
        "sourceUnit": 288,
        "src": "26:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          287
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 363,
        "linearizedBaseContracts": [
          363
        ],
        "name": "WagerFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 292,
            "name": "factoryOwner",
            "nodeType": "VariableDeclaration",
            "scope": 363,
            "src": "77:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 291,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "77:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 295,
            "name": "wagers",
            "nodeType": "VariableDeclaration",
            "scope": 363,
            "src": "110:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[] storage ref"
            },
            "typeName": {
              "baseType": {
                "id": 293,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "110:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 294,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "110:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[] storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 297,
            "name": "testValue",
            "nodeType": "VariableDeclaration",
            "scope": 363,
            "src": "139:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 296,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "139:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 309,
              "nodeType": "Block",
              "src": "199:65:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 300,
                      "name": "factoryOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 292,
                      "src": "209:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 301,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6369,
                        "src": "224:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "224:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "209:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "209:25:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 305,
                      "name": "testValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "244:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "256:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "244:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "244:13:1"
                }
              ]
            },
            "documentation": null,
            "id": 310,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "WagerFactory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "189:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "199:0:1"
            },
            "scope": 363,
            "src": "168:96:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "322:37:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 315,
                      "name": "wagers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 295,
                      "src": "339:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "339:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 314,
                  "id": 317,
                  "nodeType": "Return",
                  "src": "332:20:1"
                }
              ]
            },
            "documentation": null,
            "id": 319,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getWagersCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 313,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "316:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "315:6:1"
            },
            "scope": 363,
            "src": "270:89:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 328,
              "nodeType": "Block",
              "src": "402:42:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 322,
                      "name": "testValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "412:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 323,
                        "name": "testValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 297,
                        "src": "424:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "436:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "424:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "412:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "412:25:1"
                }
              ]
            },
            "documentation": null,
            "id": 329,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "incrementTestValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "392:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "402:0:1"
            },
            "scope": 363,
            "src": "365:79:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 361,
              "nodeType": "Block",
              "src": "487:173:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 333,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6369,
                            "src": "505:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "505:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 335,
                          "name": "factoryOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 292,
                          "src": "519:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "505:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 332,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6372,
                      "src": "497:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "497:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "497:35:1"
                },
                {
                  "assignments": [
                    340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 340,
                      "name": "newWager",
                      "nodeType": "VariableDeclaration",
                      "scope": 362,
                      "src": "542:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wager_$287",
                        "typeString": "contract Wager"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 339,
                        "name": "Wager",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 287,
                        "src": "542:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Wager_$287",
                          "typeString": "contract Wager"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 352,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 348,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6369,
                          "src": "588:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "588:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 350,
                        "name": "factoryOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "600:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 345,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6369,
                            "src": "577:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "577:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "id": 342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "560:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$returns$_t_contract$_Wager_$287_$",
                                "typeString": "function (address,address) payable returns (contract Wager)"
                              },
                              "typeName": {
                                "contractScope": null,
                                "id": 341,
                                "name": "Wager",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 287,
                                "src": "564:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Wager_$287",
                                  "typeString": "contract Wager"
                                }
                              }
                            }
                          ],
                          "id": 343,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "559:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$returns$_t_contract$_Wager_$287_$",
                            "typeString": "function (address,address) payable returns (contract Wager)"
                          }
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "559:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_creation_payable$_t_address_$_t_address_$returns$_t_contract$_Wager_$287_$value_$",
                          "typeString": "function (uint256) returns (function (address,address) payable returns (contract Wager))"
                        }
                      },
                      "id": 347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "559:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$returns$_t_contract$_Wager_$287_$value",
                        "typeString": "function (address,address) payable returns (contract Wager)"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "559:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wager_$287",
                      "typeString": "contract Wager"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "542:71:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 357,
                            "name": "newWager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 340,
                            "src": "643:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Wager_$287",
                              "typeString": "contract Wager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Wager_$287",
                              "typeString": "contract Wager"
                            }
                          ],
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "635:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "635:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 353,
                        "name": "wagers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 295,
                        "src": "623:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "623:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "623:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "623:30:1"
                }
              ]
            },
            "documentation": null,
            "id": 362,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "offerWager",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "469:2:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "487:0:1"
            },
            "scope": 363,
            "src": "450:210:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 364,
        "src": "49:613:1"
      }
    ],
    "src": "0:663:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/dmitrisavitski/EthereumProjects/Practice/truffle-test/contracts/WagerFactory.sol",
    "exportedSymbols": {
      "WagerFactory": [
        363
      ]
    },
    "id": 364,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 289,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/Users/dmitrisavitski/EthereumProjects/Practice/truffle-test/contracts/Wager.sol",
        "file": "./Wager.sol",
        "id": 290,
        "nodeType": "ImportDirective",
        "scope": 364,
        "sourceUnit": 288,
        "src": "26:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          287
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 363,
        "linearizedBaseContracts": [
          363
        ],
        "name": "WagerFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 292,
            "name": "factoryOwner",
            "nodeType": "VariableDeclaration",
            "scope": 363,
            "src": "77:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 291,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "77:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 295,
            "name": "wagers",
            "nodeType": "VariableDeclaration",
            "scope": 363,
            "src": "110:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[] storage ref"
            },
            "typeName": {
              "baseType": {
                "id": 293,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "110:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 294,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "110:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[] storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 297,
            "name": "testValue",
            "nodeType": "VariableDeclaration",
            "scope": 363,
            "src": "139:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 296,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "139:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 309,
              "nodeType": "Block",
              "src": "199:65:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 300,
                      "name": "factoryOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 292,
                      "src": "209:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 301,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6369,
                        "src": "224:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "224:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "209:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "209:25:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 305,
                      "name": "testValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "244:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "256:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "244:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "244:13:1"
                }
              ]
            },
            "documentation": null,
            "id": 310,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "WagerFactory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "189:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "199:0:1"
            },
            "scope": 363,
            "src": "168:96:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "322:37:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 315,
                      "name": "wagers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 295,
                      "src": "339:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "339:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 314,
                  "id": 317,
                  "nodeType": "Return",
                  "src": "332:20:1"
                }
              ]
            },
            "documentation": null,
            "id": 319,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getWagersCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 313,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "316:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "315:6:1"
            },
            "scope": 363,
            "src": "270:89:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 328,
              "nodeType": "Block",
              "src": "402:42:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 322,
                      "name": "testValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "412:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 323,
                        "name": "testValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 297,
                        "src": "424:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "436:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "424:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "412:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "412:25:1"
                }
              ]
            },
            "documentation": null,
            "id": 329,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "incrementTestValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "392:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "402:0:1"
            },
            "scope": 363,
            "src": "365:79:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 361,
              "nodeType": "Block",
              "src": "487:173:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 333,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6369,
                            "src": "505:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "505:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 335,
                          "name": "factoryOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 292,
                          "src": "519:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "505:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 332,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6372,
                      "src": "497:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "497:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "497:35:1"
                },
                {
                  "assignments": [
                    340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 340,
                      "name": "newWager",
                      "nodeType": "VariableDeclaration",
                      "scope": 362,
                      "src": "542:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wager_$287",
                        "typeString": "contract Wager"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 339,
                        "name": "Wager",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 287,
                        "src": "542:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Wager_$287",
                          "typeString": "contract Wager"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 352,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 348,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6369,
                          "src": "588:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "588:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 350,
                        "name": "factoryOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "600:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 345,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6369,
                            "src": "577:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "577:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "id": 342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "560:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$returns$_t_contract$_Wager_$287_$",
                                "typeString": "function (address,address) payable returns (contract Wager)"
                              },
                              "typeName": {
                                "contractScope": null,
                                "id": 341,
                                "name": "Wager",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 287,
                                "src": "564:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Wager_$287",
                                  "typeString": "contract Wager"
                                }
                              }
                            }
                          ],
                          "id": 343,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "559:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$returns$_t_contract$_Wager_$287_$",
                            "typeString": "function (address,address) payable returns (contract Wager)"
                          }
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "559:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_creation_payable$_t_address_$_t_address_$returns$_t_contract$_Wager_$287_$value_$",
                          "typeString": "function (uint256) returns (function (address,address) payable returns (contract Wager))"
                        }
                      },
                      "id": 347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "559:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$returns$_t_contract$_Wager_$287_$value",
                        "typeString": "function (address,address) payable returns (contract Wager)"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "559:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wager_$287",
                      "typeString": "contract Wager"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "542:71:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 357,
                            "name": "newWager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 340,
                            "src": "643:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Wager_$287",
                              "typeString": "contract Wager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Wager_$287",
                              "typeString": "contract Wager"
                            }
                          ],
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "635:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "635:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 353,
                        "name": "wagers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 295,
                        "src": "623:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "623:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "623:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "623:30:1"
                }
              ]
            },
            "documentation": null,
            "id": 362,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "offerWager",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "469:2:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "487:0:1"
            },
            "scope": 363,
            "src": "450:210:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 364,
        "src": "49:613:1"
      }
    ],
    "src": "0:663:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.21+commit.dfe3193c.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x4c7408305b633bb2b3d86fee16196a4d78f44b309d07548acc99370f1c904065"
    },
    "1523567198963": {
      "events": {},
      "links": {},
      "address": "0x1d79344a4b4d38fd20da6e593c8cd471f1914b16",
      "transactionHash": "0x5ec3d13cb8216fff4242e5ebb5061c42dbd4b4ae63ebecb2e76ab98bfac3efdd"
    },
    "1523612629410": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x610ca189bb0744027d32576a525f63b0102c1cb901c3d75391e7e3e15d2f6f6c"
    },
    "1523618564879": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x23378ac20116e67a1f5be3a79f2bfbcccc4365f16a1577077f130b25ad77a95f"
    },
    "1523637285338": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x23378ac20116e67a1f5be3a79f2bfbcccc4365f16a1577077f130b25ad77a95f"
    },
    "1523638700736": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x23378ac20116e67a1f5be3a79f2bfbcccc4365f16a1577077f130b25ad77a95f"
    },
    "1523639039392": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x23378ac20116e67a1f5be3a79f2bfbcccc4365f16a1577077f130b25ad77a95f"
    },
    "1523639923847": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x729ed21cba655cb1503910ae361469f5d5543a028de337d1fadb131df7e9e710"
    },
    "1523640430319": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x76f24cbc45d78c5634ccabadef786fa9c39112588de81d346b1c0da27afd97e6"
    },
    "1523641780020": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x76f24cbc45d78c5634ccabadef786fa9c39112588de81d346b1c0da27afd97e6"
    },
    "1523655653952": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x76f24cbc45d78c5634ccabadef786fa9c39112588de81d346b1c0da27afd97e6"
    },
    "1523656329912": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x76f24cbc45d78c5634ccabadef786fa9c39112588de81d346b1c0da27afd97e6"
    },
    "1523657412790": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0xb75f836166c8e57303c3a5869972c34f3d4ff1a0690f92eec36cd7347819961e"
    },
    "1523657530233": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x1ccfb93f993d8b9b17a88bc761483d140d6796036fc41d35725b6bf67b08b9ce"
    },
    "1523690120319": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x1ccfb93f993d8b9b17a88bc761483d140d6796036fc41d35725b6bf67b08b9ce"
    },
    "1523700948107": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x1ccfb93f993d8b9b17a88bc761483d140d6796036fc41d35725b6bf67b08b9ce"
    },
    "1523701757212": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x1ccfb93f993d8b9b17a88bc761483d140d6796036fc41d35725b6bf67b08b9ce"
    },
    "1523703942271": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x1ccfb93f993d8b9b17a88bc761483d140d6796036fc41d35725b6bf67b08b9ce"
    },
    "1523704321556": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x1ccfb93f993d8b9b17a88bc761483d140d6796036fc41d35725b6bf67b08b9ce"
    },
    "1523704693583": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x1ccfb93f993d8b9b17a88bc761483d140d6796036fc41d35725b6bf67b08b9ce"
    },
    "1524211680787": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x1ccfb93f993d8b9b17a88bc761483d140d6796036fc41d35725b6bf67b08b9ce"
    },
    "1524233039099": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x2abe471641bfc9dbad12da322b4e758540c1c927a59396d2ad16504fa7c45196"
    },
    "1524233121785": {
      "events": {},
      "links": {},
      "address": "0x3d0ffd085b9486048c2f4282d507d7d667a11eb7",
      "transactionHash": "0x2905d2b4d4b47f3ac29760f9ee5442c1652a90cb38a24e2abe5016ae7feaa771"
    },
    "1524292630702": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x967cea10f497488543424f7492bc48c0906524498a6c37d32e303799d4cb0e35"
    },
    "1524294601282": {
      "events": {},
      "links": {},
      "address": "0x346e7d7519641fabf4d5ead69323bc2f39af7768",
      "transactionHash": "0x967cea10f497488543424f7492bc48c0906524498a6c37d32e303799d4cb0e35"
    },
    "1524295782986": {
      "events": {},
      "links": {},
      "address": "0xb0c64f31feb34cf9a33c6852f55b7502ccaa5a4c",
      "transactionHash": "0xb6c03281ad83a6be6340d8330d7e2e0f7910a53ee300235c8c083fe2a385196e"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-21T08:09:28.086Z"
}